name: Build Windows msix

on:
  workflow_call:
  workflow_dispatch:

env:
    DOTNETVERSION: 8.0.204
jobs:
  create_runner:
    name: Deploy Self Hosted Runner
    runs-on: [self-hosted, ubuntu-latest]
    steps:
        - name: Checkout code
          uses: actions/checkout@v2
        - name: Clone VM
          id: pull
          uses: parallels/parallels-desktop-github-action@v1
          with:
            operation: 'clone'
            username: ${{ secrets.PARALLELS_USERNAME }}
            password: ${{ secrets.PARALLELS_PASSWORD }}
            insecure: true
            host_url: home.carloslapao.com:5470
            base_vm: Maui_DevBox
            start_after_op: true
        - name: Configure Github Runner
          id: configure  
          uses: parallels/parallels-desktop-github-action@v1
          with:
            max_attempts: 5
            timeout_seconds: 2
            operation: 'run'
            username: ${{ secrets.PARALLELS_USERNAME }}
            password: ${{ secrets.PARALLELS_PASSWORD }}
            host_url: home.carloslapao.com:5470
            insecure: true
            machine_name: ${{ steps.pull.outputs.vm_id }}
            run: |
                curl -o c:\install-runner.ps1 https://raw.githubusercontent.com/Parallels/prlctl-scripts/main/github/actions-runner/windows/install-runner.ps1
                curl -o c:\configure-runner.ps1 https://raw.githubusercontent.com/Parallels/prlctl-scripts/main/github/actions-runner/windows/configure-runner.ps1
                curl -o c:\remove-runner.ps1 https://raw.githubusercontent.com/Parallels/prlctl-scripts/main/github/actions-runner/windows/remove-runner.ps1

                powershell c:\install-runner.ps1
                powershell c:\configure-runner.ps1 -o Locally-build -t ${{ secrets.GH_PAT }} -n ${{ github.run_id }}_builder -l ${{ github.run_id }}_builder
    outputs:
        vm_id: ${{ steps.pull.outputs.vm_id }}
        vm_name: ${{ steps.pull.outputs.vm_name }}
  build_windows_arm64:
    name: Build Windows msix ARM64
    needs: create_runner
    runs-on: 
        - self-hosted
        - Windows
        - ${{ github.run_id }}_builder
    steps:
      - uses: actions/checkout@v2     
      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{env.DOTNETVERSION}}'
          
      - name: Install .NET MAUI
        shell: pwsh
        run: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          & dotnet workload install android ios maccatalyst tvos macos maui wasm-tools maui-maccatalyst --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
      
      # https://docs.microsoft.com/en-us/dotnet/maui/windows/deployment/overview
      - name: Build Windows MSIX ARM64
        run: |
          dotnet publish -f net8.0-windows10.0.19041.0 -c Release 

      - uses: actions/upload-artifact@v2
        with:
            name: artifacts-windows-arm64
            path: |
                bin\Release\net8.0-windows10.0.19041.0\win10-arm64\AppPackages\**\*.msix

  build_windows_x64:
    name: Build Windows msix X64
    needs: create_runner
    runs-on: 
        - self-hosted
        - Windows
        - ${{ github.run_id }}_builder
    steps:
      - uses: actions/checkout@v2     
      - name: Setup .NET SDK ${{env.DOTNETVERSION}}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '${{env.DOTNETVERSION}}'
          
      - name: Install .NET MAUI
        shell: pwsh
        run: |
          & dotnet nuget locals all --clear
          & dotnet workload install maui --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
          & dotnet workload install android ios maccatalyst tvos macos maui wasm-tools maui-maccatalyst --source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet7/nuget/v3/index.json --source https://api.nuget.org/v3/index.json
      
      - name: Build Windows MSIX X64
        run: |
          dotnet publish -f net8.0-windows10.0.19041.0 -c Release /p:RuntimeIdentifierOverride=win10-x64 /p:UseRidGraph=true /p:Platform="x64"

      - uses: actions/upload-artifact@v2
        with:
            name: artifacts-windows-x64
            path: |
                bin\x64\Release\net8.0-windows10.0.19041.0\win10-x64\AppPackages\**\*.msix
  clean_runner:
    if: always()
    needs: 
    - build_windows_arm64
    - build_windows_x64
    - create_runner
    name: Clean Runner
    runs-on: ubuntu-latest
    steps:
        - name: Remove Github Runner
          id: configure  
          uses: parallels/parallels-desktop-github-action@v1
          with:
            operation: 'run'
            username: ${{ secrets.PARALLELS_USERNAME }}
            password: ${{ secrets.PARALLELS_PASSWORD }}
            host_url: home.carloslapao.com:5470
            insecure: true
            machine_name: ${{ needs.create_runner.outputs.vm_id }}
            run: |
                powershell c:\remove-runner.ps1 -o Locally-build -t ${{ secrets.GH_PAT }}
        - name: Remove VM
          if: always()
          id: remove
          uses: parallels/parallels-desktop-github-action@v1
          with:
            operation: 'delete'
            username: ${{ secrets.PARALLELS_USERNAME }}
            password: ${{ secrets.PARALLELS_PASSWORD }}
            insecure: true
            host_url: home.carloslapao.com:5470
            machine_name: ${{ needs.create_runner.outputs.vm_id }}