name: Build Android

on:
  workflow_call:
    inputs:
      upload_artifacts:
        type: boolean
        default: true
      run_tests:
        type: boolean
        default: true
      region:
        required: true
        type: string
        default: "eu-west-2"
jobs:
  Build:
    runs-on: [self-hosted, linux]

    env:
        CONFIGURATION_SERVICES_WEBAPP_SERVICE_API_SUBDOMAIN: ""
        CONFIGURATION_SERVICES_WEBCLIENT_SERVICE_DOMAIN: ""
        FLUTTER_HOME: "${{ github.workspace }}/flutter"

    steps:
      - uses: actions/checkout@v2

      - name: Update Path
        run: |
          echo "/opt/homebrew/bin" >> $GITHUB_PATH
          echo "/usr/local/bin" >> $GITHUB_PATH

      - name: Install Building Tools
        if: false
        run: |
          sudo apt install -y cmake clang ninja-build pkg-config libgtk-3-dev

      - name: Set Up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin" # See 'Supported distributions' for available options
          java-version: "17"
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: 'platform-tools'

      # https://github.com/lzhiyong/android-sdk-tools/releases
      - name: Install ADB
        run: |
          curl --compressed --location --output tools.zip https://github.com/lzhiyong/android-sdk-tools/releases/download/34.0.3/android-sdk-tools-static-aarch64.zip
          unzip -d tools -n -q tools.zip
          rm -f tools.zip
          cp tools/platform-tools/adb /home/parallels/.android/sdk/platform-tools/adb
          rm -fr tools
        shell: bash

      # https://ci.android.com/builds/branches/aosp-emu-master-dev/grid
      - name: Install Emulator
        run: |
          curl --compressed --location --output emulator.zip $(curl --location --silent https://ci.android.com/builds/submitted/11162281/emulator-linux_aarch64/latest/sdk-repo-linux_aarch64-emulator-11162281.zip | grep -o 'https://storage[^"]*' | sed 's/\\u0026/\&/g')
          unzip -d /home/parallels/.android/sdk -n -q emulator.zip
          rm -f emulator.zip
          cp /home/parallels/.android/sdk/platform-tools/package.xml /home/parallels/.android/sdk/emulator/package.xml
          sed -i \
            -e 's|path="[a-zA-Z-]*"|path="emulator"|g' \
            -e 's|<display-name>Android .*<\/display-name>|<display-name>Android Emulator<\/display-name>|g' \
            /home/parallels/.android/sdk/emulator/package.xml
          echo 'Vulkan = off\nGLDirectMem = on' >> ~/.android/advancedFeatures.ini
        shell: bash

      - name: Install SDK Tools
        run: |
          sdkmanager 'platforms;android-34' 'system-images;android-34;google_apis;arm64-v8a' 'tools'
          bash -c 'yes || true' | sdkmanager --licenses
        shell: bash 

      - uses: cjlapao/setup-flutter-action@v0.1.6
        name: Setup Flutter
        with:
          channel: "stable"

      - name: Install dependencies
        run: flutter pub get

      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Test
        if: ${{ inputs.run_tests == true }}
        run: flutter test

      # - name: Generating app keys
      #   shell: bash
      #   run: |
      #     echo "{" >> api-keys.json
      #     echo "  \"API_URL\": \"${{ env.CONFIGURATION_SERVICES_WEBAPP_SERVICE_API_SUBDOMAIN }}.${{ env.CONFIGURATION_SERVICES_WEBCLIENT_SERVICE_DOMAIN }}\", " >> api-keys.json
      #     echo "  \"AWS_KEY_ID\": \"${{ secrets.AWS_ACCESS_KEY_ID }}\", " >> api-keys.json
      #     echo "  \"AWS_KEY_SECRET\": \"${{ secrets.AWS_SECRET_ACCESS_KEY }}\" " >> api-keys.json
      #     echo "}" >> api-keys.json

      # - name: Create Keys folder
      #   run: mkdir keys

      # - name: Download Android keystore
      #   id: android_keystore
      #   uses: timheuer/base64-to-file@v1.2
      #   with:
      #     fileName: babyready-keystore.jks
      #     fileDir: './keys/'
      #     encodedString: ${{ secrets.BABYREADY_KEYSTORE_JKS }}

      # - name: Create key.properties
      #   run: |
      #     echo "storeFile=../../keys/babyready-keystore.jks" > android/key.properties
      #     echo "storePassword=${{ secrets.BABYREADY_KEYSTORE_PASSWORD }}" >> android/key.properties
      #     echo "keyPassword=${{ secrets.BABYREADY_KEYSTORE_PASSWORD }}" >> android/key.properties
      #     echo "keyAlias=${{ secrets.BABYREADY_KEYSTORE_ALIAS }}" >> android/key.properties

      - name: Build Android APK
        if: false
        run: flutter build apk --release --obfuscate --split-debug-info . --dart-define-from-file api-keys.json

      - name: Build Android App Bundle
        if: false
        run: flutter build appbundle --release --obfuscate --split-debug-info . --dart-define-from-file api-keys.json

      - name: Build Android APK
        run: flutter build apk --release --obfuscate --split-debug-info .

      - name: Build Android App Bundle
        run: flutter build appbundle --release --obfuscate --split-debug-info .

      - name: Upload App Bundle Artifact
        if: ${{ inputs.upload_artifacts == true }}
        uses: actions/upload-artifact@v2
        with:
          name: app-bundle
          path: build/app/outputs/bundle/release/app-release.aab

      - name: Upload APK Artifact
        if: ${{ inputs.upload_artifacts == true }}
        uses: actions/upload-artifact@v2
        with:
          name: app-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: Upload Android Debug Symbols
        if: ${{ inputs.upload_artifacts == true }}
        uses: actions/upload-artifact@v2
        with:
          name: android-debug-symbols
          path: ./*.symbols