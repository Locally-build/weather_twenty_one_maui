name: Deploy Runners

on:
  workflow_call:
    inputs:
      runner_name:
        type: string
        required: true
      github_org_name:
        type: string
        required: true

jobs:
  deploy_runner:
    name: Deploy Self Hosted Runner
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
      AWS_REGION: us-east-2
      KEY_NAME: ${{ secrets.KEY_NAME }}
      TF_VAR_parallels_key: ${{ secrets.PARALLELS_KEY }}
      TF_VAR_github_org_name: ${{ inputs.github_org_name }}
      TF_VAR_github_token: ${{ secrets.GH_TOKEN }}
      TF_VAR_runner_name: ${{ inputs.runner_name }}
      TF_VAR_host_remote_state_bucket: ${{ secrets.BUCKET_NAME }}
      TF_VAR_host_remote_state_key: ${{ secrets.DEPLOYMENT_KEY_NAME }}
      TF_VAR_host_remote_state_region: us-east-2

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.6.5

      - name: Terraform Init
        working-directory:  ${{ github.workspace }}/pipelines/terraform
        run: terraform init -backend-config="bucket=${AWS_BUCKET_NAME}" -backend-config="region=${AWS_REGION}" -backend-config="key=${KEY_NAME}"

      - name: Terraform Validate
        working-directory:  ${{ github.workspace }}/pipelines/terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory:  ${{ github.workspace }}/pipelines/terraform
        run: terraform plan -out plan.out

      - name: Terraform Apply
        working-directory:  ${{ github.workspace }}/pipelines/terraform
        run: terraform apply -auto-approve plan.out
